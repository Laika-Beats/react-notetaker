{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","localStorageKey","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","console","log","prevTodos","uuidv4","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAIjC,OACI,8BACI,kCACI,uBAAOC,KAAK,WAAWC,QAAWH,EAAKI,SAAUC,SAN7D,WACIJ,EAAWD,EAAKM,OAMPN,EAAKO,UCPP,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACtC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAACD,EAAD,CAAsBE,WAAYA,EAAYD,KAAQA,GAAzCA,EAAKM,O,YCF/BK,EAAkB,gBAkDTC,MAhDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNJ,EADM,KACCK,EADD,KAEPC,EAAcC,mBAmCpB,OAjCAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KAEzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAiBQ,KAAKK,UAAUf,MACpD,CAACA,IA0BF,qCACA,cAACD,EAAD,CAAUC,MAASA,EAAOR,WAzB5B,SAAoBK,GAClB,IAAMmB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAA1B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASW,MAsBT,uBAAOE,IAAKZ,EAAab,KAAK,SAC9B,wBAAQ0B,QApBV,SAAuBC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MACpB,KAATxB,IACJyB,QAAQC,IAAI1B,GACZO,GAAS,SAAAoB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAC5B,GAAI6B,cAAU5B,KAAMA,EAAMH,UAAU,QAE7DW,EAAYe,QAAQC,MAAQ,OAa5B,sBACA,wBAAQH,QAVV,WACE,IAAMH,EAAWhB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAC5CU,EAASW,IAQT,4BACA,gCAAMhB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAAUiC,OAA3C,qBC7CJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ee40995.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo( {todo, toggleTodo} ) {\n    function handleTodoClick(){\n        toggleTodo(todo.id)\n    }\n    return (\n        <div>\n            <label>\n                <input type=\"checkbox\" checked = {todo.complete} onChange={handleTodoClick}/>\n                {todo.name}\n            </label>\n        </div>\n    )\n}","import React from 'react'\nimport Todo from \"./Todo\"\n\nexport default function TodoList( {todos, toggleTodo} ) {\n    return (\n        todos.map(todo => {\n            return <Todo key = {todo.id} toggleTodo={toggleTodo} todo = {todo}/>\n        })\n    )\n}","import React, {useState, useRef, useEffect} from 'react';\nimport TodoList from \"./TodoList\"\nimport { v4 as uuidv4 } from 'uuid'\n\nconst localStorageKey = \"todoApp.todos\"\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(localStorageKey))\n    if (storedTodos) setTodos(storedTodos)\n\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === \"\") return\n    console.log(name)\n    setTodos(prevTodos => {\n      return [...prevTodos, {id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n\n  }\n\n  function handleClearTodos(){\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    < >\n    <TodoList todos = {todos} toggleTodo={toggleTodo}/>\n    <input ref={todoNameRef} type=\"text\"/>\n    <button onClick={handleAddTodo}>Add Todo</button>\n    <button onClick={handleClearTodos}>Clear Complete</button>\n    <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}